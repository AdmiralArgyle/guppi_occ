# Enable Home Assistant API
api:
  # Only enable BLE tracking when wifi is up and api is connected
  # Gives single-core ESP32-C3 devices time to manage wifi and authenticate with api
  on_client_connected:
     - esp32_ble_tracker.start_scan:
        continuous: true
  # Disable BLE tracking when there are no api connections live
  on_client_disconnected:
    if:
      condition:
        not:
          api.connected:
      then:
        - esp32_ble_tracker.stop_scan:

ota:
  - platform: esphome

# Enable Home Assistant API
wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  - ssid: !secret wifi_2_ssid
    password: !secret wifi_2_password
  - ssid: !secret wifi_3_ssid
    password: !secret wifi_3_password
  output_power: 8.5dB

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name}"
    password: !secret fallback_ap_password

# Web server (optional, consider disabling in production)
#web_server:
#  port: 80

# Bluetooth Tracker & Proxy configuration
# Use esp-idf platform - not arduino
# Disable web server - don't use both at the same time
esp32_ble_tracker:
  scan_parameters:
    # Don't auto start BLE scanning, we control it in the `api` block's automation.
    continuous: False
    # required if your device is controlling other sensors or doing PWM for lights etc.
    active: True  # send scan-request packets to gather more info, like device name for some devices.
    # If the device cannot keep up or becomes unstable, reduce the "window" setting. This may be
    interval: 320ms
    window: 100ms

bluetooth_proxy:
  active: true

